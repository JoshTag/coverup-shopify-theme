<!-- Solution brought to you by Caroline Schnapp -->
<!-- See this: https://docs.shopify.com/support/your-store/products/can-i-recommend-related-products -->

{% comment %}
  Number of related items per row,
  and number of rows.
{% endcomment %}

{% assign number_of_related_products_per_row = 28 %}
{% assign number_of_rows = 1 %}

{% comment %}
  Heading.
  Leave blank if you don't need one.
{% endcomment %}

{% assign heading = 'Other fine products' %}

{% comment %}
  Set either or both to true, if you want
  to limit yourself to items with same vendor, and/or type.
{% endcomment %}

{% assign same_vendor = true %}
{% assign same_type = true %}

{% comment %}
  Collections to ignore.
  Never pick related items from those.
{% endcomment %}

{% capture exclusions %}{% for c in product.collections %}{% assign cTitle = c.title | downcase %}{% if cTitle contains 'test' %}{{ c.handle }},{% endif %}{% endfor %}frontpage,all{% endcapture %}
{% assign exclusions = exclusions | split: ',' %}


{% comment %}
  Looking for a relevant collection.
{% endcomment %}

{% assign model = product.title | split: '—' | first | replace: ' ', '' | strip | downcase %}

{% for c in product.collections %}
  {% unless exclusions contains c.handle %}
    {% assign col_down = c.title | replace: ' ', '' | strip | downcase %}
    {% if col_down contains model %}
      {% assign found_a_collection = true %}
      {% assign collection = c %}
      {% break %}
    {% endif %}
  {% endunless %}
{% endfor %}


{% comment %}
  If we have a relevant collection.
{% endcomment %}

{% if found_a_collection %}

  {% assign counter = 0 %}
  {% assign break_at = number_of_rows | times: number_of_related_products_per_row %}
  {% assign current_product = product %}

  {% capture related_items %}
    {% paginate collection.products by 10000 %}
      {% for product in collection.products %}
        {% unless same_vendor and current_product.vendor != product.vendor %}
          {% unless same_type and current_product.type != product.type %}
            <li class="similar-products" data-product-colour="{{ product.variants.first.options.first }}"><a href="{{ product.url | within: collection }}"><img src="{{ product.featured_image.src | product_img_url: 'small' }}" alt="{{ product.featured_image.alt | escape }}"></a></li>
            {% assign counter = counter | plus: 1 %}
            {% if counter == break_at %}
              {% break %}
            {% endif %}
            {% endunless %}
        {% endunless %}
      {% endfor %}
    {% endpaginate %}
  {% endcapture %}

  {% assign related_items = related_items | trim %}

  {% unless related_items == blank %}
    <div id="similar-styles">
      <div class="similar-products-image">
        {% assign init_colour = product.variants.first.options.first %}
        <span>FINISH:</span> <span id="hover-colour">{{ product.variants.first.options.first }}</span>
        <!-- {% if product.type contains 'Wood' %}
        <span>ALTERNATIVE WOOD FINISH:</span>
        {% elsif product.type contains 'Stone' %}
        <span>ALTERNATIVE STONE FINISH:</span>
        {% elsif product.type contains 'Shell' %}
        <span>ALTERNATIVE SHELL FINISH:</span>
        {% else %}
        <span>ALTERNATIVE STYLES:</span>
        {% endif %} -->
        <ul class="related-items--slick-slider">
          {{ related_items }}
        </ul>
      </div>
    </div>
  {% endunless %}
{% endif %}

{% comment %}
  Snap vs Explorer for Cases
  Soon to have Skin vs Case for macbooks
{% endcomment %}

{% for tag in product.tags %}
{% if tag contains 'colour' %}
  {% assign t = tag %}
{% endif %}
{% endfor %}

{% assign product_collection = product.title | split: '—' | first | handleize %}
{% if product_collection == "iphone-se-2020-2022" %}
  {% assign product_collection = "iphone-se" %}
{% endif  %}
{% paginate collection.products by 1000 %}
  {% for p in collections[product_collection].products %}

    {% if p.tags contains t and p.tags contains 'casetype_Snap Case' %}
      {% capture snap_case %}
        <a class="product-type__btn {% if p.id == product.id %}active{% endif %}" href="{{p.url}}">Snap</a>
      {% endcapture %}
    {% endif %}

    {% if p.tags contains t and p.tags contains 'casetype_Explorer Case'%}
      {% capture explorer_case %}
        <a class="product-type__btn {% if p.id == product.id %}active{% endif %}" href="{{p.url}}">Explorer</a>
      {% endcapture %}
    {% endif %}

    {% endfor %}
{% endpaginate %}

{% if snap_case != blank and explorer_case != blank %}
  <div class="product-type__label-ctn">
    <span class="product-type__label">TYPE:</span><span class="product-type__popup-btn" id="phone-case-popup-btn">What's the difference?</span>
    <div id="phone-case-popup">
      <span class="phone-case-popup__close"><svg aria-hidden="true" focusable="false" role="presentation" class="icon icon-close" viewBox="0 0 64 64"><path d="M19 17.61l27.12 27.13m0-27.12L19 44.74"/></svg></span>
      <span class="phone-case-popup__label">Snap</span>
      <p class="phone-case-popup__description">Snap on phone case. Easy to install and remove.</p>
      <span class="phone-case-popup__label">Explorer</span>
      <p class="phone-case-popup__description">Full phone bumber case. Easy to install and remove.</p>
    </div>
  </div>
  <div class="product-type">
    {{snap_case}} {{explorer_case}}
  </div>
{% endif %}

<script>
  const mouseTarget = document.querySelectorAll('.similar-products');
  const hoverColour = document.getElementById('hover-colour');
  const carousel = document.querySelector('.related-items--slick-slider');

  mouseTarget.forEach(target => {
    target.addEventListener('mouseenter', e => {
      hoverColour.innerHTML = e.target.getAttribute('data-product-colour');
    })
  });

  carousel.addEventListener('mouseleave', e => {
    hoverColour.innerHTML = '{{init_colour}}';
  })

</script>